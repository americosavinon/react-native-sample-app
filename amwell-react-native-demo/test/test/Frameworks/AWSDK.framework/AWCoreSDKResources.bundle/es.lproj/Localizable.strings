/* Accessibility hint for the notched view when the bottom drawer is open */
"console.bottomDrawer.close.hint" = "Closes the drawer";

/* Accessibility label for notched view that opens the bottom drawer in the WebRTC video console */
"console.bottomDrawer.label" = "Drawer";

/* Accessibility hint for the notched view when the bottom drawer is closed */
"console.bottomDrawer.open.hint" = "Opens the drawer";

/* Accessibility label for Toggle Camera button in video console */
"console.button.camera" = "Toggle Camera";

/* Accessibility label for Toggle Camera button when it has switched to front-facing camera */
"console.button.camera.front" = "Front Camera";

/* Accessibility hint for Toggle Camera button */
"console.button.camera.hint" = "Toggles between front, back, and disabled camera";

/* Accessibility label for Toggle Camera button when camera has been disabled */
"console.button.camera.none" = "Camera Disabled";

/* Accessibility label for Toggle Camera button when it has switched to rear-facing camera */
"console.button.camera.rear" = "Rear Camera";

/* Accessibility label for Participants button in video console */
"console.button.dock" = "Toggle Participant Dock";

/* Accessibility hint for Participants button */
"console.button.dock.hint" = "Opens a dock showing other video participants";

/* Accessibility label for End Visit button in video console.  Also used as short title of End Visit button in WebRTC video console. */
"console.button.end" = "End";

/* Accessibility hint for End Visit button */
"console.button.end.hint" = "Ends your visit";

/* Long title for End Visit button in WebRTC video console */
"console.button.endVisit" = "End Visit";

/* Accessibility label for Invite Guest button in video console */
"console.button.inviteGuest" = "Invite Guest";

/* Accessibility hint for Invite Guest button */
"console.button.inviteGuest.hint" = "Invites a guest to your visit";

/* Accessibility label for Microphone button in video console */
"console.button.mic" = "Mute Microphone";

/* Accessibility hint for Microphone button */
"console.button.mic.hint" = "Disables your microphone";

/* Accessibility label for Refresh button in video console */
"console.button.refresh" = "Refresh";

/* Accessibility hint for Refresh button */
"console.button.refresh.hint" = "Refreshes your visit if you are experiencing connection issues";

/* Accessibility label for Speaker button in video console */
"console.button.speaker" = "Mute Speaker";

/* Accessibility hint for Speaker button */
"console.button.speaker.hint" = "Mutes your speaker";

/* Alert button to confirm canceling the visit */
"console.cancel.confirm" = "Cancel Visit";

/* Alert message when pressing End Visit button before the visit starts */
"console.cancel.confirm.instructions" = "This will cancel your visit. If you need more time, tap anywhere on the screen.";

/* Title for button to cancel a visit */
"console.cancelButton.title" = "Cancel";

/* Accessibility hint for Cancel Visit button */
"console.cancelButton.title.hint" = "Cancels the visit after confirmation";

/* Alert message when pressing End Visit button during a visit */
"console.end.confirm" = "End Visit";

/* Alert button to confirm ending the visit */
"console.end.confirm.instructions" = "This will end your visit. If you need more time, tap anywhere on the screen.";

/* Alert message for visit extension - [Provider] has offered to extend this conversation. You will be charged [$AMOUNT] for [X] additional minute[s] */
"console.extension.message" = "%1$@ has offered to extend this conversation. You will be charged %2$@ for %3$d additional minute%4$@.";

/* Option to accept extension */
"console.extension.option.accept" = "Yes";

/* Option to decline extension */
"console.extension.option.decline" = "No";

/* Alert title for visit extension */
"console.extension.title" = "Would you like to extend this visit?";

/* Button title for leaving visit as a guest */
"console.guest.end.confirm" = "Leave Visit";

/* Alert message for leaving the visit as a guest */
"console.guest.end.confirm.instructions" = "This will disconnect you from the visit.";

/* Alert message for guest when patient cancels the visit */
"console.guest.waiting.canceled.message" = "The consumer has canceled this visit";

/* Alert title for guest when patient cancels the visit */
"console.guest.waiting.canceled.title" = "Visit Canceled";

/* Displayed when guest's video disconnects */
"console.guest.waiting.disconnected" = "It looks like your video disconnected.";

/* Displayed when leaving the visit as a guest */
"console.guest.waiting.ending" = "Please Wait. \nYou are leaving the visit.";

/* Displayed when guest is connecting to the visit */
"console.guest.waiting.loading" = "Please wait while you are connected to the visit";

/* Displayed when guest refreshes the video */
"console.guest.waiting.refreshing" = "Refreshing Video... \nIf you lose your connection, you can rejoin the visit by tapping Join Now button in your invitation email.";

/* Message for error alert when guest email address has already been added */
"console.invite.duplicate.message" = "This guest has already been invited";

/* Message for error alert when invitation couldn't be sent */
"console.invite.failed.message" = "The invite failed to send. Please try again later.";

/* Title for error alert when invitation couldn't be sent */
"console.invite.failed.title" = "Invite Failed";

/* Message for error alert when guest email address is invalid */
"console.invite.invalid.message" = "Please enter a valid email address";

/* Title for error alert when guest email address is invalid */
"console.invite.invalid.title" = "Email Invalid";

/* Button for inviting the guest */
"console.invite.invite" = "Invite";

/* Message for error alert when consumer has reached the maximum number of guests */
"console.invite.max.message" = "You have reached the maximum number of invites sent";

/* Title for error alert when consumer has reached the maximum number of guests */
"console.invite.max.title" = "Cannot Add Guest";

/* Instructions for entering guest's email address */
"console.invite.message" = "Please enter the email address of the guest you would like to invite to the visit";

/* Placeholder for text field to enter guest's email address */
"console.invite.placeholder" = "Guest Email Address";

/* Title for Invite Guest screen */
"console.invite.title" = "Invite Guest";

/* Confirm phone call to provider */
"console.ivr.confirm.message" = "Are you sure you want to talk to the provider on the phone?";

/* Alert message when phone call fails */
"console.ivr.error.message" = "There was an error attempting to end the visit and enable callback.";

/* Alert title when phone call fails */
"console.ivr.error.title" = "We're Sorry";

/* Title for button to talk via phone */
"console.ivrButton.title" = "Talk via Phone";

/* Accessibility hint for Talk Via Phone button */
"console.ivrButton.title.hint" = "Calls the doctor with your cellular plan";

/* Accessibility state for Microphone & Speaker buttons when muted */
"console.muting.muted" = "Muted";

/* Accessibility state for Microphone & Speaker buttons when unmuted */
"console.muting.unmuted" = "Unmuted";

/* Option to continue the visit */
"console.providerSuggestEnd.continue" = "Continue Visit";

/* Option to end the visit */
"console.providerSuggestEnd.end" = "End Visit";

/* Provider suggested ending visit and there is no cost associated with the visit */
"console.providerSuggestEnd.message.free" = "%@ would like to end this visit.";

/* Provider suggested ending visit and patient will be charged */
"console.providerSuggestEnd.message.paid" = "%@ would like to end this visit. If you end now you will still be charged the full amount.";

/* Warning displayed when in split screen mode */
"console.splitscreen.warning" = "Enter Full Screen mode to view video";

/* One minute remaining in visit */
"console.timeRemainingAlert.message" = "You have one minute remaining.";

/* Compact status for time remaining in visit */
"console.titleBar.timeRemaining.compact" = "%d Mins Left";

/* Compact status for one minute remaining in visit */
"console.titleBar.timeRemaining.oneMinute.compact" = "1 Min Left";

/* Status message when current user has disconnected */
"console.waiting.consumerDisconnected" = "It looks like your video disconnected. We're trying to reconnect you now.";

/* Options when unable to reconnect */
"console.waiting.consumerDisconnectedExtended.bottom" = "If you'd prefer not to wait, you can end the visit.";

/* Options when unable to reconnect and phone call is available */
"console.waiting.consumerDisconnectedExtended.bottom.ivr" = "If you’d prefer, you can talk to the provider on the phone, or continue to wait for video.";

/* Status message when current user is still unable to connect */
"console.waiting.consumerDisconnectedExtended.top" = "It looks like you are having trouble reconnecting. We're still trying to connect you.";

/* Video console ending message */
"console.waiting.ending" = "Please Wait. \nYour visit is wrapping up.";

/* Video console loading message */
"console.waiting.loading" = "Hang tight! We're connecting you with %@";

/* Status message when provider has disconnected */
"console.waiting.providerDisconnected" = "We're reconnecting %@ to video.  Please wait for your provider to rejoin the visit.";

/* Options when provider is still disconnected */
"console.waiting.providerDisconnectedExtended.bottom" = "If you'd prefer not to wait, you can end the visit.";

/* Options when provider is still disconnected and phone call is available */
"console.waiting.providerDisconnectedExtended.bottom.ivr" = "If you’d prefer, you can talk to the provider on the phone, or continue to wait for video.";

/* Status message when provider is still disconnected */
"console.waiting.providerDisconnectedExtended.top" = "We're still waiting for %@ to rejoin.";

/* Status message when waiting for provider to connect */
"console.waiting.providerNotConnected" = "You've connected but we're still loading %@'s video.";

/* Options when provider has not connected */
"console.waiting.providerNotConnected.free" = "If you'd prefer not to wait, you can cancel the visit.";

/* Options when provider has not connected and phone call is available */
"console.waiting.providerNotConnected.free.ivr" = "If you'd prefer not to wait, you can talk to the provider on the phone or cancel the visit.";

/* Options when provider has not connected */
"console.waiting.providerNotConnected.paid" = "If you'd prefer not to wait, you can cancel the visit.\nYou will not be charged if you cancel.";

/* Options when provider has not connected and phone call is available */
"console.waiting.providerNotConnected.paid.ivr" = "If you'd prefer not to wait, you can talk to the provider on the phone or cancel the visit.\nYou will not be charged if you cancel.";

/* Video console refreshing message */
"console.waiting.refreshing" = "Refreshing Video... \nThe provider will call you back if you lose your connection.";

/* Disabled */
"misc.accessibility.disabled" = "Disabled";

/* Enabled */
"misc.accessibility.enabled" = "Enabled";

/* Something is `off` */
"misc.accessibilityValue.off" = "Off";

/* Something is `on` */
"misc.accessibilityValue.on" = "On";

/* Cancel */
"misc.cancel" = "Cancel";

/* Confirm */
"misc.confirm" = "Confirm";

/* No */
"misc.no" = "No";

/* OK */
"misc.ok" = "OK";

/* None */
"misc.topic.none" = "None";

/* Yes */
"misc.yes" = "Yes";

/* Call my phone number button */
"webRTC.connectReconnect.callMe" = "Call Me";

/* You will not be charged parenthetical */
"webRTC.connectReconnect.cancelNoCharge" = "(You will not be charged)";

/* Cancel visit button */
"webRTC.connectReconnect.cancelVisit" = "Cancel Visit";

/* Subtitle label - connect-reconnect view phase 2
   Subtitle label - connect-reconnect view phase 3 */
"webRTC.connectReconnect.connecting.subtitle.2" = "Parece que la conexión está tardando más de lo esperado. El proveedor puede elegir llamarte directamente.";

/* Title label - connect-reconnect view phase 1 */
"webRTC.connectReconnect.connecting.title.1" = "We're setting up your video.";

/* Title label - connect-reconnect view phase 2 */
"webRTC.connectReconnect.connecting.title.2" = "We're establishing a connection.";

/* Title label - connect-reconnect view phase 3 */
"webRTC.connectReconnect.connecting.title.3" = "%@ is connecting.";

/* Self connecting extended subtitle */
"webRTC.connectReconnect.connectingExtended.subtitle" = "We're still trying to connect you. If you'd prefer not to wait, you can cancel the visit.";

/* Self connecting extended title */
"webRTC.connectReconnect.connectingExtended.title" = "It looks like you're having \ntrouble connecting.";

/* Guest connecting subtitle */
"webRTC.connectReconnect.connectingGuest.subtitle" = "Your visit is about to begin.";

/* Guest connecting title */
"webRTC.connectReconnect.connectingGuest.title" = "Please Wait.";

/* Cancel if you don't want to wait subtitle */
"webRTC.connectReconnect.connectingRemoteExtended.subtitle" = "If you'd prefer not to wait, you can cancel the visit.";

/* Connecting remote extended title */
"webRTC.connectReconnect.connectingRemoteExtended.title" = "You've connected but we're still loading %@'s video.";

/* Leave if you don't want to wait subtitle */
"webRTC.connectReconnect.connectingRemoteExtendedGeneric.subtitle" = "If you'd prefer not to wait, you can leave the visit.";

/* We're waiting for everyone else title. */
"webRTC.connectReconnect.connectingRemoteExtendedGeneric.title" = "You've connected but we're still loading everyone's video.";

/* Waiting for everyone subtitle */
"webRTC.connectReconnect.connectingRemoteGeneric.subtitle" = "We're waiting for everyone to connect.";

/* Your visit is ending subtitle */
"webRTC.connectReconnect.end.subtitle" = "Your visit is ending.";

/* Please wait title */
"webRTC.connectReconnect.end.title" = "Please wait.";

/* End visit button */
"webRTC.connectReconnect.endVisit" = "End Visit";

/* Trying to reconnect subtitle. */
"webRTC.connectReconnect.reconnecting.subtitle" = "We're trying to reconnect you now.";

/* Your video disconnected title. */
"webRTC.connectReconnect.reconnecting.title" = "It looks like your video disconnected.";

/* End visit if you don't want to wait subtitle - local */
"webRTC.connectReconnect.reconnectingExtended.subtitle" = "If you'd prefer not to wait, you can end the visit.";

/* Looks like something is wrong title with newline. */
"webRTC.connectReconnect.reconnectingExtended.title" = "It looks like you are having \ntrouble reconnecting.";

/* We're reconnecting %@ */
"webRTC.connectReconnect.reconnectingRemote.title" = "We're reconnecting \n%@'s video.";

/* End visit if you don't want to wait subtitle - remote */
"webRTC.connectReconnect.reconnectingRemoteExtended.subtitle" = "If you'd prefer not to wait, you can end the visit.";

/* Still waiting for *newline* %@ to rejoin. */
"webRTC.connectReconnect.reconnectingRemoteExtended.title" = "We're still waiting for \n%@ to rejoin.";

/* Wait for patient to rejoin */
"webRTC.connectReconnect.reconnectingRemotePatient.subtitle" = "Please wait for your patient to rejoin the visit.";

/* Wait for provider to rejoin */
"webRTC.connectReconnect.reconnectingRemoteProvider.subtitle" = "Please wait for your provider to rejoin the visit.";

/* Refresh video button */
"webRTC.connectReconnect.refreshVideo" = "Refresh Video";

/* Camera button label */
"webRTC.console.camera" = "Camera";

/* Back facing */
"webRTC.console.camera.accessibilityValue.back" = "Back facing";

/* Front facing */
"webRTC.console.camera.accessibilityValue.front" = "Front facing";

/* Guest end button label - compact */
"webRTC.console.leave" = "Leave";

/* Guest end button label - long */
"webRTC.console.leaveVisit" = "Leave Visit";

/* Mic button label */
"webRTC.console.microphone" = "Mic";

/* Video console nav bar title */
"webRTC.console.navigationBarTitle" = "Video Visit";

/* Double Tap to Zoom */
"webRTC.console.stageTooltip.accessibilityValue.tapToZoom" = "Double Tap to Zoom";

/* Switch camera button label */
"webRTC.console.switchCamera" = "Switch";

/* Localized time string (x minutes y seconds) - remaining */
"webRTC.console.timeRemaining" = "%@ remaining";

/* + Add Another Guest - Symbol + text - button */
"webRTC.invite.addAnotherGuest" = "+ Add Another Guest";

/* Destroys the view - alert button */
"webRTC.invite.closeAlert.closeActionTitle" = "Close";

/* Alert message */
"webRTC.invite.closeAlert.message" = "You’ve added guest email addresses but haven't sent the invites.";

/* Leaves the view where it is */
"webRTC.invite.closeAlert.okActionTitle" = "Continue Editing";

/* Are you sure you want to close? - alert title */
"webRTC.invite.closeAlert.title" = "Are you sure you want to close?";

/* Guest’s Email textfield placeholder */
"webRTC.invite.guestEmailPlaceholder" = "Guest’s Email";

/* You’ve invited the maximum number of guests. - table footer */
"webRTC.invite.invitedGuestsFooter" = "You’ve invited the maximum number of guests.";

/* Guests You’ve Invited - table header */
"webRTC.invite.invitedGuestsHeader" = "Guests You’ve Invited";

/* Invite Guest - nav bar title */
"webRTC.invite.navigationBarTitle" = "Invite Guest";

/* You may invite up to %d guests */
"webRTC.invite.newGuestsFooter" = "You may invite up to %d guests";

/* table header */
"webRTC.invite.newGuestsHeader" = "Enter an email address and we’ll send your guest a link to join the visit.";

/* Remove guest button */
"webRTC.invite.removeGuest" = "Remove";

/* Send Invite to guest button */
"webRTC.invite.sendInvite" = "Send Invite";

/* Invitations sent - temporary popup */
"webRTC.invite.sentSuccess" = "Invites Sent";

