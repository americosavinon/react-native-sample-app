/* 
  Localizable.strings
  AWSDK

  Created by Calvin Chestnut on 9/28/15.
  Copyright © 2015 American Well.
  All rights reserved.
 
  It is illegal to use, reproduce or distribute
  any part of this Intellectual Property without
  prior written authorization from American Well.
*/


// Accessibility
/* Spoken when end visit button is selected */
"console.button.end" = "Fin";

/* Spoken accessibility hint describing the end visit button */
"console.button.end.hint" = "Termine ta visite";

/* Spoken when the invite guest button is selected */
"console.button.inviteGuest" = "Inviter un invité";

/* Spoken accessibility hint describing the invite guest button */
"console.button.inviteGuest.hint" = "Invite un invité à votre visite";

/* Spoken when the refresh video button is selected */
"console.button.refresh" = "Rafraîchir";

/* Spoken accessibility hint for refreshing the video connection if user is experiencing issues */
"console.button.refresh.hint" = "Actualise votre visite si vous rencontrez des problèmes de connexion";

/* Spoken when camera toggle button is selected */
"console.button.camera" = "Toggle Camera";

/* Spoken accessibility hint for switching between front, back, and disabled camera state */
"console.button.camera.hint" = "Bascule entre l'avant, l'arrière et la caméra désactivée";

/* Spoken when front camera button is selected */
"console.button.camera.front" = "Caméra frontale";

/* Spoken when rear camera button is selected */
"console.button.camera.rear" = "Caméra arrière";

/* Spoken when disable camera button is selected */
"console.button.camera.none" = "Caméra désactivée";

/* Spoken when mute microphone button is selected */
"console.muting.muted" = "En sourdine";

/* Spoken when unmute microphone is selected */
"console.muting.unmuted" = "Non-muet";

/* Spoken when mute speaker button is selected */
"console.button.speaker" = "Muet Speaker";

/* Spoken when unmute speaker button is selected */
"console.button.speaker.hint" = "Mutes votre haut-parleur";

/* Spoken when mute microphone button is selected*/
"console.button.mic" = "Mute Microphone";

/* Accessibility hint spoken when the mute microphone button is selected */
"console.button.mic.hint" = "Désactive ton micro";

/* Spoken when the toggle dock button is selected */
"console.button.dock" = "Activer le Dock Participant";

/* Spoken accessibility hint explaining that the participant dock shows the other video participants */
"console.button.dock.hint" = "Ouvre un dock montrant les autres participants vidéo";

/* Spoken accessibility hint explaining how the butten lets the user call the doctor */
"console.ivrButton.title.hint" = "Appelle le docteur avec ton plan cellulaire";

/* Spoken accessibility hint explaining how the butten lets the user cancel the visit */
"console.cancelButton.title.hint" = "Annule la visite après confirmation";


// Text
/* Confirmation instructions for canceling a visit */
"console.cancel.confirm.instructions" = "Cela annulera votre visite. Si vous avez besoin de plus de temps, appuyez n'importe où sur l'écran.";

/* Alert title for canceling visit */
"console.cancel.confirm" = "Annuler la visite";

/* Confirmation message after pressing the cancel visit button */
"console.cancelButton.confirm.title" = "Es-tu sûre de vouloir annuler?";

/* Information about canceling a visit */
"console.cancelButton.confirm.message" = "Vous ne serez pas débité si vous annulez la visite";

/* Cancel button title on the Video Console */
"console.cancelButton.title" = "Annuler";

/* Message informing user of a connection failure */
"console.connect.timeout.title" = "Nous sommes désolés, nous n'avons pas pu nous connecter à ce fournisseur.";

/* Connection failure explanation */
"console.connect.timeout.message" = "Le fournisseur peut être indisponible ou avoir des problèmes de vidéo. Veuillez choisir un autre fournisseur ou contacter le service clientèle pour plus d'informations.";

/* Error message when the visit cannot be updated */
"console.connect.disconnected.message" = "Un problème est survenu lors de la connexion au réseau pour mettre à jour le statut de la visite.";

/* Option presented when the user ends the visit */
"console.end.confirm.instructions" = "Cela va terminer votre visite. Si vous avez besoin de plus de temps, appuyez n'importe où sur l'écran.";

/* Alert title when the visit is ended by the consumer */
"console.end.confirm" = "Fin de la visite";

/* Information presented when the visit has run out of time and is about to end */
"console.extension.title" = "Voulez-vous prolonger cette visite?";

/* Information presented when the consumer elects to extend the visit */
"console.extension.message" = "%@ a offert d'étendre cette conversation. Vous serez facturé %@ pour %d minute supplémentaire%@.";

/* Accept button for visit extention */
"console.extension.option.accept" = "Oui";

/* Decline button for visit extention */
"console.extension.option.decline" = "Non";

"console.guest.connect.timeout.title" = "Nous sommes désolés, nous n'avons pas pu nous connecter à cette visite.";

/* Alert message when the guest's connection fails */
"console.guest.connect.timeout.message" = "Veuillez réessayer plus tard";

/* Alert message that warns the guest that they are leaving the visit */
"console.guest.end.confirm.instructions" = "Cela vous déconnectera de la visite.";

/* Alert title when leaving a visit */
"console.guest.end.confirm" = "Laissez visite";

/* Alert title presented to guests when the visit is canceled */
"console.guest.waiting.canceled.title" = "Visite annulée";

/* Alert message that warns the guest that they are leaving the visit */
"console.guest.waiting.canceled.message" = "Le consommateur a annulé cette visite";

/* Alert message shown to guests when they lose their connection */
"console.guest.waiting.disconnected" = "Il semble que votre vidéo soit déconnectée.";

/* Alert message shown to guests when they lose their connection */
"console.guest.waiting.ending" = "'S'il vous plaît, attendez. Tu pars de la visite.";

/* Message displayed while the console connects to a visit */
"console.guest.waiting.loading" = "Veuillez patienter pendant que vous êtes connecté à la visite";

/* Message displayed while the console attempts to reconnect after a disconnect */
"console.guest.waiting.refreshing" = "Rafraîchissement de la vidéo ... \ nSi vous perdez votre connexion, vous pouvez rejoindre la visite en cliquant sur le bouton Rejoindre maintenant dans votre e-mail d'invitation.";

"console.invite.max.title" = "Impossible d'ajouter un invité";

/* Alert message telling the user that no more guest invitations can be sent */
"console.invite.max.message" = "Vous avez atteint le nombre maximum d'invitations envoyées";

/* Alert message telling the user that the guest had already been invited  */
"console.invite.duplicate.message" = "Cet invité a déjà été invité";

/* Title presented on the invite guest screen */
"console.invite.title" = "Inviter un invité";

/* Instructions on how to invite a guest */
"console.invite.message" = "S'il vous plaît entrer l'adresse e-mail de l'invité que vous souhaitez inviter à la visite";

/* Text field placeholder */
"console.invite.placeholder" = "Adresse e-mail de l'invité";

/* Invite guest button title */
"console.invite.invite" = "Inviter";

/* Alert message shown when the email address of the invitee is invalid */
"console.invite.invalid.message" = "S'il vous plaît, mettez une adresse email valide";

/* Alert title for invitation failed */
"console.invite.failed.title" = "Inviter a échoué";

/* Alert message shown when a guest invitation failed */
"console.invite.failed.message" = "L'invitation n'a pas pu être envoyée. Veuillez réessayer plus tard.";

/* Title for invalid email alert */
"console.invite.invalid.title" = "Email invalide";

/* Alert message for invalid email error */
"console.invite.invalie.message" = "S'il vous plaît, mettez une adresse email valide";

/* Alert title */
"console.ivr.confirm.title" = "Rappeler";

/* Alert message before initiating an IVR visit */
"console.ivr.confirm.message" = "Êtes-vous sûr de vouloir parler au fournisseur au téléphone?";


/* Alert error title */
"console.ivr.error.title" = "Nous sommes désolés";

/* Alert error message when attempting an IVR call after a video visit */
"console.ivr.error.message" = "Une erreur s'est produite lors de la tentative de fin de la visite et a activé le rappel.";

/* Button that starts a telephone visit */
"console.ivrButton.title" = "Parlez par téléphone";

/*  Message that displays when the user initiates the end of a free visit */
"console.providerSuggestEnd.message.free" = "%@ aimerait terminer cette visite.";

/* Message that displays when the user initiates the end of a paid visit */
"console.providerSuggestEnd.message.paid" = "'%@ aimerait terminer cette visite. Si vous terminez maintenant, vous serez toujours facturé le montant total.";

/* Alert button text for ending visit */
"console.providerSuggestEnd.end" = "Fin de la visite";

/* Alert button text for continuing visit */
"console.providerSuggestEnd.continue" = "Continuer la visite";

/* Recommendation to facilitate proper video viewing */
"console.splitscreen.warning" = "Entrer en mode plein écran pour voir la vidéo";

/* Warning that the visit is about to end */
"console.timeRemainingAlert.message" = "Il vous reste une minute.";

/* Compact title bar message indicating how much of the visit is left */
"console.titleBar.timeRemaining.compact" = "%d Mins Gauche";

/* Regular size title bar message indicating how much of the visit is left */
"console.titleBar.timeRemaining.regular" = "%d minutes restantes";

/* Compact one minute warning title that visit is about to end */
"console.titleBar.timeRemaining.oneMinute.compact" = "1 Min Gauche";

/* Regular size one minute warning title that the visit is about to end */
"console.titleBar.timeRemaining.oneMinute.regular" = "1 minute restante";

/* Message that the video has disconnected */
"console.waiting.consumerDisconnected" = "'Il semble que votre vidéo soit déconnectée. Nous essayons de vous reconnecter maintenant.";
"console.waiting.consumerDisconnectedExtended.top" = "'Il semble que vous ayez des problèmes pour vous reconnecter. Nous essayons toujours de vous connecter.";

/* Message that offers the consumer the option of connecting by phone if video is unavailable */
"console.waiting.consumerDisconnectedExtended.bottom.ivr" = "Si vous préférez, vous pouvez parler au fournisseur par téléphone ou continuer à attendre la vidéo.";
"console.waiting.consumerDisconnectedExtended.bottom" = "Si vous préférez ne pas attendre, vous pouvez terminer la visite.";

/* Message offering the consumer the option of refreshing the connection or disconnecting when video is unavailable */
"console.waiting.disconnected" = "Il semble que votre vidéo soit déconnectée. Appuyez sur Actualiser pour reprendre ou sur Terminer pour terminer votre visite. ";

/* Message displayed when the visit ends and a summary is being prepared */
"console.waiting.ending" = "'S'il vous plaît, attendez. Votre visite se termine.";

/* Loading message displayed when a visit with a provider is about to begin */
"console.waiting.loading" = "Tenir fermement! Nous vous connectons avec %@";

/* Message displayed when the consumer cannot connect with a provider */
"console.waiting.notConnected" = "On dirait que vous avez des problèmes pour vous connecter.";

/* Message displayed when the consumer cannot connect with a provider and is offered the option to cancel the visit */
"console.waiting.notConnected.extended" = "Nous essayons toujours de vous connecter. Si vous préférez ne pas attendre, vous pouvez annuler la visite '";

/* Message displayed when the consumer is being reconnected to a provider */
"console.waiting.providerDisconnected" = "Nous nous reconnectons à %@ video. Veuillez attendre que votre fournisseur rejoigne la visite. ";

/* Message displayed when the consumer is being reconnected to a provider and its taking longer than expected*/
"console.waiting.providerDisconnectedExtended.top" = "Nous attendons toujours %@ pour rejoindre.";

/* Message displayed when the consumer is waiting a long time to reconnect to a provier and is offered the chance to switch to a phone visit or continue waiting */
"console.waiting.providerDisconnectedExtended.bottom.ivr" = "Si vous préférez, vous pouvez parler au fournisseur par téléphone ou continuer à attendre la vidéo.";

/* Message displayed when the consumer is waiting a long time to reconnect to a provider and is offered the chance to end the visit */
"console.waiting.providerDisconnectedExtended.bottom" = "Si vous préférez ne pas attendre, vous pouvez terminer la visite.";

/* Message displayed when the consumer is connected but the video is still loading */
"console.waiting.providerNotConnected" = "Vous vous êtes connecté mais nous continuons à charger la vidéo de %@.";

/* Message displayed when the consumer is waiting a long time to reconnect to a provider and is offered the chance to end the visit or speak to the provider on the phone when the visit is free */
"console.waiting.providerNotConnected.free.ivr" = "Si vous préférez ne pas attendre, vous pouvez parler au fournisseur par téléphone ou annuler la visite.";

/* Message displayed when the consumer is waiting a long time to reconnect to a provider and is offered the chance to either end the visit without charge, or continue on the phone */
"console.waiting.providerNotConnected.paid.ivr" = "Si vous préférez ne pas attendre, vous pouvez parler au fournisseur par téléphone ou annuler la visite. \ NVous ne serez pas facturé si vous annulez.";

/* Message displayed when the consumer is waiting a long time to reconnect to a provider and is offered the chance to end the visit and not be charged */
"console.waiting.providerNotConnected.free" = "Si vous préférez ne pas attendre, vous pouvez annuler la visite.";

/* Message displayed when the consumer is waiting a long time to reconnect to a provider and is offered the chance to end the visit but will have to pay for the visit */
"console.waiting.providerNotConnected.paid" = "Si vous préférez ne pas attendre, vous pouvez annuler la visite. \ NVous ne serez pas facturé si vous annulez.";


/* Message informing the consumer that the provider will call if the re-connection fails */
"console.waiting.refreshing" = "Rafraîchir la vidéo ... \ nLe fournisseur vous rappellera si vous perdez votre connexion.";

/* Cancel button */
"misc.cancel" = "Annuler";

/* Confirm button */
"misc.confirm" = "Confirmer";

/* No button */
"misc.no" = "Non";

/* No button */
"misc.ok" = "D'ACCORD";

/* Yes button */
"misc.yes" = "Oui";

/* Enable button */
"misc.enabled" = "Activée";

/* Disabled button */
"misc.disabled" = "Désactivé";

/* None */
"topic.none" = "Aucun";

/* Test string */
"test.noparams" = "Chaîne de message";
/* Offered to extend conversation */
"%@ has offered to extend this conversation. You will be charged %@ for %d additional minute%@." = "%1$@ has offered to extend this conversation. You will be charged %2$@ for %3$d additional minute%4$@.";

/* Visit ending message with copay */
"%@ would like to end this visit." = "%@ would like to end this visit.";

/* Visit ending message with no copay */
"%@ would like to end this visit. If you end now you will still be charged the full amount." = "%@ would like to end this visit. If you end now you will still be charged the full amount.";

/* IVR alert message to confirm phone visit */
"Are you sure you want to talk to the provider on the phone?" = "Are you sure you want to talk to the provider on the phone?";

/* Cancel alert title */
"Cancel" = "Cancel";

/* Connect/reconnect cancel visit */
"Cancel Visit" = "Cancel Visit";

/* Connect/reconnect continue visit */
"Continue Visit" = "Continue Visit";

/* Connect/reconnect end visit */
"End Visit" = "End Visit";

/* Invite guest button */
"Invite" = "Invite";

/* Alert title when leaving a visit */
"Leave Visit" = "Leave Visit";

/* No action title
 No title */
"No" = "No";

/* No available topic */
"None" = "None";

/* OK title
 Ok visit alert action */
"OK" = "OK";

/* Reload video feed button */
"Reload" = "Reload";

/* Toggle incoming audio button */
"Speaker" = "Speaker";

/* Error alert message when ending visit */
"There was an error attempting to end the visit and enable callback." = "There was an error attempting to end the visit and enable callback.";

/* Alert message that warns the guest that they are leaving the visit */
"This will disconnect you from the visit." = "This will disconnect you from the visit.";

/* Option presented when the user ends the visit */
"This will end your visit. If you need more time, tap anywhere on the screen." = "This will end your visit. If you need more time, tap anywhere on the screen.";

/* Extension confirmation message */
"Would you like to extend this visit?" = "Would you like to extend this visit?";

/* Yes action title
 Yes IVR title
 Yes title */
"Yes" = "Yes";

/* Visit ending soon in 1 minute */
"You have one minute remaining." = "You have one minute remaining.";

"webRTC.console.navigationBarTitle" = "Video Visit";
"webRTC.console.camera" = "Camera";
"webRTC.console.microphone" = "Mic";
"webRTC.console.switchCamera" = "Switch";

"webRTC.invite.navigationBarTitle" = "Invite Guest";
"webRTC.invite.sentSuccess" = "Invites Sent";
"webRTC.invite.removeGuest" = "Remove";
"webRTC.invite.guestEmailPlaceholder" = "Guest’s Email";
"webRTC.invite.addAnotherGuest" = "+ Add Another Guest";
"webRTC.invite.sendInvite" = "Send Invite";
"webRTC.invite.invitedGuestsHeader" = "Guests You’ve Invited";
"webRTC.invite.invitedGuestsFooter" = "You’ve invited the maximum number of guests.";
"webRTC.invite.newGuestsHeader" = "Enter an email address and we’ll send your guest a link to join the visit.";
"webRTC.invite.newGuestsFooter" = "You may invite up to %d guests";
"webRTC.invite.closeAlert.title" = "Are you sure you want to close?";
"webRTC.invite.closeAlert.message" = "You’ve added guest email addresses but haven't sent the invites.";
"webRTC.invite.closeAlert.okActionTitle" = "Continue Editing";
"webRTC.invite.closeAlert.closeActionTitle" = "Close";

"webRTC.connectReconnect.cancelVisit" = "Cancel Visit";
"webRTC.connectReconnect.endVisit" = "End Visit";
"webRTC.connectReconnect.refreshVideo" = "Refresh Video";
"webRTC.connectReconnect.callMe" = "Call Me";

"webRTC.connectReconnect.connecting.title" = "We're connecting you with \n%@.";
"webRTC.connectReconnect.connectingGuest.title" = "Please Wait.";
"webRTC.connectReconnect.connectingGuest.subtitle" = "Your visit is about to begin.";
"webRTC.connectReconnect.connectingExtended.title" = "It looks like you're having \ntrouble connecting.";
"webRTC.connectReconnect.connectingExtended.subtitle" = "We're still trying to connect you. If you'd prefer not to wait, you can cancel the visit.";
"webRTC.connectReconnect.cancelNoCharge" = "(You will not be charged)";
"webRTC.connectReconnect.connectingRemoteExtended.title" = "You've connected but we're still loading %@'s video.";
"webRTC.connectReconnect.connectingRemoteExtended.subtitle" = "If you'd prefer not to wait, you can cancel the visit.";
"webRTC.connectReconnect.reconnecting.title" = "It looks like your video disconnected.";
"webRTC.connectReconnect.reconnecting.subtitle" = "We're trying to reconnect you now.";
"webRTC.connectReconnect.reconnectingExtended.title" = "It looks like you are having \ntrouble reconnecting.";
"webRTC.connectReconnect.reconnectingExtended.subtitle" = "If you'd prefer not to wait, you can end the visit.";
"webRTC.connectReconnect.reconnectingRemote.title" = "We're reconnecting \n%@'s video.";
"webRTC.connectReconnect.reconnectingRemoteProvider.subtitle" = "Please wait for your provider to rejoin the visit.";
"webRTC.connectReconnect.reconnectingRemotePatient.subtitle" = "Please wait for your patient to rejoin the visit.";
"webRTC.connectReconnect.reconnectingRemoteExtended.title" = "We're still waiting for \n%@ to rejoin.";
"webRTC.connectReconnect.reconnectingRemoteExtended.subtitle" = "If you'd prefer not to wait, you can end the visit.";
